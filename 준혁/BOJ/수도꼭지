import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 수도꼭지 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		long result = 0;
		// 수도꼭지 갯수 N 입력
		int N = Integer.parseInt(br.readLine());

		// p1[1] ~ p1[N] 수도 꼭지 생성
		long[] p1 = new long[N + 1];
		// 수도꼭지의 열림 닫힘을 판단하기 위한 boolean 배열 생성 true = 열림 , false = 닫힘
		boolean[] p2 = new boolean[N + 1];

		st = new StringTokenizer(br.readLine());
		for (int i = 1; i <= N; i++) {
			p1[i] = Long.parseLong(st.nextToken());
			p2[i] = true;
			result += p1[i];
		}

		sb.append(result + "\n");

		int Q = Integer.parseInt(br.readLine());

		for (int i = 0; i < Q; i++) {
			st = new StringTokenizer(br.readLine());
			String c = st.nextToken();

			if (c.equals("1")) {
				int n = Integer.parseInt(st.nextToken());
				int l = Integer.parseInt(st.nextToken());

				if (p2[n]) {
					result -= p1[n];
					result += l;
					p1[n] = l;
				}
				else {
					p1[n] = l;
				}
			}

			else if (c.equals("2")) {
				int t = Integer.parseInt(st.nextToken());

				if (!p2[t]) {
					p2[t] = true;
					result += p1[t];
				} else {
					p2[t] = false;
					result -= p1[t];
				}
			}
			sb.append(result + "\n");
		}
		System.out.println(sb.toString());
	}
}
